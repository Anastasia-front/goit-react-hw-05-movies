{"version":3,"file":"static/js/779.4654504d.chunk.js","mappings":"0QAEaA,E,OAASC,GAAAA,GAAH,uG,SCuDnB,EAnDgB,WACd,OAA8BC,EAAAA,EAAAA,WAAS,WAAO,IAAD,EAC3C,iBAAOC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,mBAA9C,QAA6D,CAAC,CAC/D,IAFD,eAAOC,EAAP,KAAgBC,EAAhB,KAGA,GAA0BP,EAAAA,EAAAA,UAAS,MAAnC,eAAOQ,EAAP,KAAcC,EAAd,KAEQC,GAAOC,EAAAA,EAAAA,MAAPD,GAmBR,OAjBAE,EAAAA,EAAAA,YAAU,WACRT,OAAOC,aAAaS,QAAQ,UAAWZ,KAAKa,UAAUR,GACvD,GAAE,CAACA,KAEJM,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEkCG,EAAAA,EAAAA,IAAoBL,GAAIM,MAAK,SAAAC,GAAC,OAAIA,CAAJ,IAFhE,OAEUC,EAFV,OAIIX,EAAWW,GAJf,gDAMIT,EAAS,EAAD,IANZ,0DADc,uBAAC,WAAD,wBAUdU,EACD,GAAE,CAACT,KAGF,8BACa,OAAVF,GACC,SAAC,KAAD,UAC8B,IAA3BF,EAAQc,QAAQC,QACf,wBACGf,EAAQc,QAAQE,KAAI,SAAAC,GACnB,OACE,UAACzB,EAAD,YACE,gBAAI0B,MAAO,CAAEC,MAAO,aAApB,qBAA4CF,EAAEG,WAC9C,6BAAKH,EAAEI,QAAP,SAFWJ,EAAEb,GAKlB,OAGH,yEAIJ,+EAAuDF,EAAvD,QAIP,C,sLCvDKoB,EAAW,gCACXC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,MAAM,GAAD,OACvBH,EADuB,sCACeC,IAFtC,cACCG,EADD,yBAKEA,EAASC,QALX,kEAOA,IAAMC,EAAY,mCAAG,WAAMC,GAAN,uFACHJ,MAAM,GAAD,OACvBH,EADuB,kBACLO,EADK,oBACcN,IAFhB,cACpBG,EADoB,yBAKnBA,EAASC,QALU,2CAAH,sDAQZG,EAAgB,mCAAG,WAAMD,GAAN,uFACPJ,MAAM,GAAD,OACvBH,EADuB,kBACLO,EADK,4BACsBN,IAFpB,cACxBG,EADwB,yBAKvBA,EAASC,QALc,2CAAH,sDAQhBlB,EAAmB,mCAAG,WAAMoB,GAAN,uFACVJ,MAAM,GAAD,OACvBH,EADuB,kBACLO,EADK,4BACsBN,IAFjB,cAC3BG,EAD2B,yBAK1BA,EAASC,QALiB,2CAAH,sDAQzB,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAkCC,GAAlC,uFACkBP,MAAM,GAAD,OACvBH,EADuB,gCACSC,EADT,kBAC0BS,IAFjD,cACCN,EADD,yBAKEA,EAASC,QALX,kE,sBClCP,SAASM,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOxC,GAEP,YADAkC,EAAOlC,EAET,CAEIuC,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAOhC,KAAK2B,EAAOC,EAEvC,CAEe,SAASO,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIN,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMY,EAAGK,MAAMJ,EAAME,GAEzB,SAASZ,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOc,GACdnB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASc,EACnE,CAEAf,OAAMgB,EACR,GACF,CACF,C","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","serviceAPI/fetch.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ListLi = styled.li`\n  margin-bottom: 20px;\n  list-style: none;\n  border-bottom: 1px solid grey;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviewsById } from 'serviceAPI/fetch';\nimport { Container } from 'components/SharedLayout/SharedLayout.styled';\nimport { ListLi } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState(() => {\n    return JSON.parse(window.localStorage.getItem('reviews')) ?? {};\n  });\n  const [error, setError] = useState(null);\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    window.localStorage.setItem('reviews', JSON.stringify(reviews));\n  }, [reviews]);\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const objectOfreviews = await getMovieReviewsById(id).then(r => r);\n\n        setReviews(objectOfreviews);\n      } catch (error) {\n        setError(error);\n      }\n    }\n    fetchData();\n  }, [id]);\n\n  return (\n    <>\n      {error === null ? (\n        <Container>\n          {reviews.results.length !== 0 ? (\n            <ul>\n              {reviews.results.map(c => {\n                return (\n                  <ListLi key={c.id}>\n                    <h3 style={{ color: 'darkgreen' }}>Author: {c.author}</h3>\n                    <p>`{c.content}`</p>\n                  </ListLi>\n                );\n              })}\n            </ul>\n          ) : (\n            <h3>We don`t have any reviews for this movie.</h3>\n          )}\n        </Container>\n      ) : (\n        <h3>Something went wrong on API... The messege error `{error}`</h3>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","const BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '78844696e6f21da4f5b43c08b71ce0bd';\n\nexport async function getTrending() {\n  const response = await fetch(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n\n  return response.json();\n}\nexport const getMovieById = async movieId => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n\n  return response.json();\n};\n\nexport const getMovieCastById = async movieId => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n\n  return response.json();\n};\n\nexport const getMovieReviewsById = async movieId => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n\n  return response.json();\n};\n\nexport async function getSearchByKeyWord(query) {\n  const response = await fetch(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}`\n  );\n\n  return response.json();\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["ListLi","styled","useState","JSON","parse","window","localStorage","getItem","reviews","setReviews","error","setError","id","useParams","useEffect","setItem","stringify","getMovieReviewsById","then","r","objectOfreviews","fetchData","results","length","map","c","style","color","author","content","BASE_URL","API_KEY","getTrending","fetch","response","json","getMovieById","movieId","getMovieCastById","getSearchByKeyWord","query","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}