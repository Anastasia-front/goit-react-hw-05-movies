{"version":3,"file":"static/js/544.c8839317.chunk.js","mappings":"iRA+HA,UAvHa,WACX,OAA4BA,EAAAA,EAAAA,UAASC,EAAAA,GAAAA,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA4BH,EAAAA,EAAAA,UAAS,CACnC,CACEI,GAAI,EACJC,YAAa,KACbC,MAAO,GACPC,eAAgB,GAChBC,aAAc,GACdC,aAAc,EACdC,WAAY,KARhB,eAAOC,EAAP,KAAeC,EAAf,KAWA,GAA0BZ,EAAAA,EAAAA,UAAS,GAAnC,eAAOa,EAAP,KAAcC,EAAd,KACA,GAAoCd,EAAAA,EAAAA,UAAS,GAA7C,eAAOe,EAAP,KAAmBC,EAAnB,KACA,GAA0BhB,EAAAA,EAAAA,UAAS,MAAnC,eAAOiB,EAAP,KAAcC,EAAd,KACA,GAA8BlB,EAAAA,EAAAA,WAAS,GAAvC,eAAOmB,EAAP,KAAgBC,EAAhB,KAEA,GAA4CpB,EAAAA,EAAAA,UAAS,GAArD,eAAOqB,EAAP,KAAuBC,EAAvB,MAEAC,EAAAA,EAAAA,YAAU,WAAM,wCAEd,8GAEgCC,EAAAA,EAAAA,IAAY,GAAGC,MAAK,SAAAC,GAAC,OAAIA,EAAEC,OAAN,IAFrD,OAEUC,EAFV,OAGIhB,EAAUgB,GACVd,GAAS,SAAAe,GAAC,OAAIA,EAAI,CAAR,IACV1B,EAAUF,EAAAA,GAAAA,UALd,gDAOIiB,EAAS,EAAD,IACRf,EAAUF,EAAAA,GAAAA,UARd,0DAFc,sBACdE,EAAUF,EAAAA,GAAAA,SADI,mCAad6B,GACA,IAAMC,EAAe,WACnB,IAAMC,EAAWC,OAAOC,YACxBZ,EAAkBU,EACnB,EAID,OAFAC,OAAOE,iBAAiB,SAAUJ,GAE3B,WACLE,OAAOG,oBAAoB,SAAUL,EACtC,CACF,GAAE,KAEHR,EAAAA,EAAAA,YAAU,WAAM,wCACd,kGAEQV,GAASE,EAAa,IAF9B,iCAGkCS,EAAAA,EAAAA,IAAYX,GAAOY,MAAK,SAAAC,GAAC,OAAIA,EAAEC,OAAN,IAH3D,OAGYC,EAHZ,OAIMhB,GAAU,SAAAiB,GAAC,wBAAQA,IAAR,OAAcD,GAAd,IACXd,GAAS,SAAAe,GAAC,OAAIA,EAAI,CAAR,IALhB,uDAQIX,EAAS,EAAD,IARZ,0DADc,uBAAC,WAAD,wBAYdY,EACD,GAAE,CAACjB,EAAOE,IAyBX,OARMA,IAAeJ,EAAO0B,QACxBjB,GAAW,IAKfkB,EAAAA,EAAAA,IAAejB,IAGb,gCACGnB,IAAWD,EAAAA,GAAAA,WACV,iCACE,4CACA,UAAC,IAAD,CACEsC,WAAY5B,EAAO0B,OACnBG,KA9BY,WAAM,wCAC1B,8GAE8BhB,EAAAA,EAAAA,IAAYT,GAAYU,MAChD,SAAAC,GAAC,OAAIA,EAAEe,WAAN,IAHP,OAEUC,EAFV,OAKI1B,EAAc0B,GALlB,gDAOIxB,EAAS,EAAD,IAPZ,0DAD0B,uBAAC,WAAD,wBAW1ByB,EACD,EAmBSxB,QAASA,EACTyB,QAAQ,eAAIC,MAAO,CAAEC,UAAW,UAAxB,wBACRC,YACE,cAAGF,MAAO,CAAEC,UAAW,UAAvB,UACE,0DAPN,WAWE,SAAC,IAAD,CAAWnC,OAAQA,EAAQqC,QAASC,EAAAA,KACnC5B,EAAiB,MAChB,UAAC,IAAD,CAAM2B,QAASE,EAAAA,GAAf,iBACK,SAAC,MAAD,CAAWC,KAAM,cAM7BjD,IAAWD,EAAAA,GAAAA,WACV,+EAAuDgB,EAAvD,OAEDf,IAAWD,EAAAA,GAAAA,UACV,qEAIP,C","sources":["pages/Home/Home.jsx"],"sourcesContent":["import { getTrending, STATUS } from 'serviceAPI/fetch';\nimport MovieList from 'components/MovieList/MovieList';\nimport { GoUp } from 'pages/Movies/Movies.styled';\nimport { HiArrowUp } from 'react-icons/hi';\nimport { useState, useEffect } from 'react';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { scrollPos, scrollTop, resetScrollPos } from 'utils/scroll';\n\nconst Home = () => {\n  const [status, setStatus] = useState(STATUS.idle);\n  const [movies, setMovies] = useState([\n    {\n      id: 0,\n      poster_path: null,\n      title: '',\n      original_title: '',\n      release_date: '',\n      vote_average: 0,\n      vote_count: 0,\n    },\n  ]);\n  const [pages, setPages] = useState(2);\n  const [totalPages, setTotalPages] = useState(3);\n  const [error, setError] = useState(null);\n  const [hasMore, setHasMore] = useState(true);\n\n  const [scrollPosition, setScrollPosition] = useState(0);\n\n  useEffect(() => {\n    setStatus(STATUS.pending);\n    async function fetchData() {\n      try {\n        const arrayOfMovies = await getTrending(1).then(r => r.results);\n        setMovies(arrayOfMovies);\n        setPages(i => i + 1);\n        setStatus(STATUS.resolved);\n      } catch (error) {\n        setError(error);\n        setStatus(STATUS.rejected);\n      }\n    }\n    fetchData();\n    const handleScroll = () => {\n      const position = window.pageYOffset;\n      setScrollPosition(position);\n    };\n\n    window.addEventListener('scroll', handleScroll);\n\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        if (pages <= totalPages / 10) {\n          const arrayOfMovies = await getTrending(pages).then(r => r.results);\n          setMovies(i => [...i, ...arrayOfMovies]);\n          setPages(i => i + 1);\n        }\n      } catch (error) {\n        setError(error);\n      }\n    }\n    fetchData();\n  }, [pages, totalPages]);\n\n  const fetchMoreData = () => {\n    async function getTotalPages() {\n      try {\n        const objOfMovies = await getTrending(totalPages).then(\n          r => r.total_pages\n        );\n        setTotalPages(objOfMovies);\n      } catch (error) {\n        setError(error);\n      }\n    }\n    getTotalPages();\n  };\n\n  const reachTheEnd = () => {\n    if (totalPages === movies.length) {\n      setHasMore(false);\n    }\n  };\n  reachTheEnd();\n\n  resetScrollPos(scrollPosition);\n\n  return (\n    <>\n      {status === STATUS.resolved && (\n        <>\n          <h1>Trending today</h1>\n          <InfiniteScroll\n            dataLength={movies.length}\n            next={fetchMoreData}\n            hasMore={hasMore}\n            loader={<h4 style={{ textAlign: 'center' }}>Loading...</h4>}\n            endMessage={\n              <p style={{ textAlign: 'center' }}>\n                <b>Yay! You have seen it all ;D</b>\n              </p>\n            }\n          >\n            <MovieList movies={movies} onClick={scrollPos} />\n            {scrollPosition > 1000 && (\n              <GoUp onClick={scrollTop}>\n                UP <HiArrowUp size={24} />\n              </GoUp>\n            )}\n          </InfiniteScroll>\n        </>\n      )}\n      {status === STATUS.rejected && (\n        <h3>Something went wrong on API... The messege error `{error}`</h3>\n      )}\n      {status === STATUS.pending && (\n        <h3>Please wait, information is loading...</h3>\n      )}\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["useState","STATUS","status","setStatus","id","poster_path","title","original_title","release_date","vote_average","vote_count","movies","setMovies","pages","setPages","totalPages","setTotalPages","error","setError","hasMore","setHasMore","scrollPosition","setScrollPosition","useEffect","getTrending","then","r","results","arrayOfMovies","i","fetchData","handleScroll","position","window","pageYOffset","addEventListener","removeEventListener","length","resetScrollPos","dataLength","next","total_pages","objOfMovies","getTotalPages","loader","style","textAlign","endMessage","onClick","scrollPos","scrollTop","size"],"sourceRoot":""}