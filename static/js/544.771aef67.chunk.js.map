{"version":3,"file":"static/js/544.771aef67.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","pages/Home/Home.jsx","serviceAPI/fetch.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import styled from 'styled-components';\n\n// export const AlignCenter = styled.div`\n//   margin: 0 auto;\n// `;\n\nexport const ListUl = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n`;\n\nexport const ListLi = styled.li`\n  position: relative;\n  list-style: none;\n  width: 270px;\n  height: 550px;\n  border: 1px solid grey;\n  border-radius: 4px;\n  margin-bottom: 0px;\n\n  a {\n    text-decoration: none;\n  }\n`;\n\nexport const MovieName = styled.h3`\n  text-align: center;\n  padding: 4px;\n  margin-top: 12px;\n  margin-bottom: 6px;\n  color: black;\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  height: 403px;\n  display: block;\n  border-bottom: 1px solid darkred;\n`;\nexport const Description = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  font-weight: 500;\n  color: brown;\n  display: flex;\n  gap: 6px;\n  padding: 15px 6px 15px 6px;\n  justify-content: space-between;\n  border-top: 1px dotted;\n`;\n\nexport const Block = styled.div`\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  padding: 0 6px 0 0;\n  :not(:last-child) {\n    border-right: 1px solid grey;\n  }\n\n  p {\n    margin: 0 0 7px 0;\n  }\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  MovieName,\n  Image,\n  Description,\n  ListUl,\n  ListLi,\n  Block,\n} from './MovieList.styled';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ListUl>\n      {movies.map(movie => (\n        <ListLi key={movie.id}>\n          {location.pathname === '/movies' ? (\n            <Link to={`${movie.id}`} state={{ from: location }}>\n              {movie.poster_path !== null ? (\n                <Image\n                  src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n                  alt={movie.title}\n                  width=\"100px\"\n                />\n              ) : (\n                <Image\n                  src={\n                    'https://resources.arcamax.com/newspics/240/24034/2403468.png'\n                  }\n                  alt={movie.title}\n                  width=\"100px\"\n                />\n              )}\n\n              {movie.original_title.length > 45 ? (\n                <MovieName>\n                  {movie.original_title.slice(0, 45) + '...'}\n                </MovieName>\n              ) : (\n                <MovieName>{movie.original_title}</MovieName>\n              )}\n\n              <Description>\n                <Block>\n                  <p>Release date:</p>\n                  <p>{movie.release_date.split('-').reverse().join('/')}</p>\n                </Block>\n                <Block>\n                  <p> Rate:</p>\n                  <p>{Math.round(movie.vote_average * 10) / 10}</p>\n                </Block>\n                <Block>\n                  <p> Vote count:</p>\n                  <p>{movie.vote_count}</p>\n                </Block>\n              </Description>\n            </Link>\n          ) : (\n            <Link to={`movies/${movie.id}`} state={{ from: location }}>\n              {movie.poster_path !== null ? (\n                <Image\n                  src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n                  alt={movie.title}\n                  width=\"100px\"\n                />\n              ) : (\n                <Image\n                  src={\n                    'https://resources.arcamax.com/newspics/240/24034/2403468.png'\n                  }\n                  alt={movie.title}\n                  width=\"100px\"\n                />\n              )}\n\n              {movie.original_title.length > 45 ? (\n                <MovieName>\n                  {movie.original_title.slice(0, 45) + '...'}\n                </MovieName>\n              ) : (\n                <MovieName>{movie.original_title}</MovieName>\n              )}\n\n              <Description>\n                <Block>\n                  <p>Release date:</p>\n                  <p>{movie.release_date.split('-').reverse().join('/')}</p>\n                </Block>\n                <Block>\n                  <p> Rate:</p>\n                  <p>{Math.round(movie.vote_average * 10) / 10}</p>\n                </Block>\n                <Block>\n                  <p> Vote count:</p>\n                  <p>{movie.vote_count}</p>\n                </Block>\n              </Description>\n            </Link>\n          )}\n        </ListLi>\n      ))}\n    </ListUl>\n  );\n};\n\nexport default MovieList;\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      poster_path: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.oneOf([null]),\n      ]),\n      title: PropTypes.string.isRequired,\n      original_title: PropTypes.string.isRequired,\n      release_date: PropTypes.string.isRequired,\n      vote_average: PropTypes.number.isRequired,\n      vote_count: PropTypes.number.isRequired,\n    })\n  ),\n};\n","import { getTrending } from 'serviceAPI/fetch';\nimport MovieList from 'components/MovieList/MovieList';\nimport { useState, useEffect } from 'react';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([\n    {\n      id: 0,\n      poster_path: null,\n      title: '',\n      original_title: '',\n      release_date: '',\n      vote_average: 0,\n      vote_count: 0,\n    },\n  ]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const arrayOfMovies = await getTrending().then(r => r.results);\n        setMovies(arrayOfMovies);\n      } catch (error) {\n        setError(error);\n      }\n    }\n    fetchData();\n  }, []);\n\n  return (\n    <>\n      {error === null ? (\n        <>\n          <h1>Trending today</h1>\n          <MovieList movies={movies} />\n        </>\n      ) : (\n        <h3>Something went wrong on API... The messege error `{error}`</h3>\n      )}\n    </>\n  );\n};\n\nexport default Home;\n","const BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '78844696e6f21da4f5b43c08b71ce0bd';\n\nexport async function getTrending() {\n  const response = await fetch(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n\n  return response.json();\n}\nexport const getMovieById = async movieId => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n\n  return response.json();\n};\n\nexport const getMovieCastById = async movieId => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n\n  return response.json();\n};\n\nexport const getMovieReviewsById = async movieId => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n\n  return response.json();\n};\n\nexport async function getSearchByKeyWord(query) {\n  const response = await fetch(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}`\n  );\n\n  return response.json();\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["ListUl","styled","ListLi","MovieName","Image","Description","Block","movies","location","useLocation","map","movie","pathname","to","id","state","from","poster_path","src","alt","title","width","original_title","length","slice","release_date","split","reverse","join","Math","round","vote_average","vote_count","useState","setMovies","error","setError","useEffect","getTrending","then","r","results","arrayOfMovies","fetchData","BASE_URL","API_KEY","fetch","response","json","getMovieById","movieId","getMovieCastById","getMovieReviewsById","getSearchByKeyWord","query","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}