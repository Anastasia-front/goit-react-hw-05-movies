{"version":3,"file":"static/js/141.325f0008.chunk.js","mappings":"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","sources":["components/SearchBox/SearchBox.styled.js","components/SearchBox/SearchBox.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { HiSearch } from 'react-icons/hi';\n\nexport const Wrapper = styled.div`\n  display: inline-flex;\n  align-items: center;\n  margin-bottom: 16px;\n  text-transform: uppercase;\n  position: relative;\n`;\n\nexport const Input = styled.input`\n  padding: 8px 32px 8px 8px;\n  border-radius: 4px;\n  border: 1px solid #7c5400;\n  font: inherit;\n`;\n\nexport const Icon = styled(HiSearch)`\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  top: 9px;\n  right: 6px;\n`;\n","import { Wrapper, Input, Icon } from './SearchBox.styled';\nimport PropTypes from 'prop-types';\n\nconst SearchBox = ({ value, onChange, onSubmit }) => {\n  return (\n    <Wrapper>\n      <form onSubmit={onSubmit}>\n        <Input\n          type=\"text\"\n          value={value}\n          onChange={e => onChange(e.target.value)}\n        />\n        <Icon />\n      </form>\n    </Wrapper>\n  );\n};\nexport default SearchBox;\n\nSearchBox.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport SearchBox from 'components/SearchBox/SearchBox';\nimport { getSearchByKeyWord } from 'serviceAPI/fetch';\nimport MovieList from 'components/MovieList/MovieList';\nimport InfiniteScroll from 'react-infinite-scroll-component';\n\nconst Movies = () => {\n  const [search, setSearch] = useState('');\n  const [error, setError] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('query') ?? '';\n  const [movie, setMovie] = useState(() => {\n    return (\n      JSON.parse(window.localStorage.getItem('movieSearch')) ?? [\n        {\n          id: 0,\n          poster_path: null,\n          title: '',\n          original_title: '',\n          release_date: '',\n          vote_average: 0,\n          vote_count: 0,\n        },\n      ]\n    );\n  });\n  const [pages, setPages] = useState(1);\n  const [allInfo, setAllInfo] = useState({\n    page: 3,\n    results: [],\n    total_results: 0,\n    total_pages: 0,\n  });\n  const [hasMore, setHasMore] = useState(true);\n\n  useEffect(() => {\n    window.localStorage.setItem('movieSearch', JSON.stringify(movie));\n  }, [movie]);\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        if (pages <= allInfo.page) {\n          const arrayOfMovies = await getSearchByKeyWord(search, pages).then(\n            r => r.results\n          );\n          setMovie(i => [...i, ...arrayOfMovies]);\n          setPages(i => i + 1);\n        }\n      } catch (error) {\n        setError(error);\n      }\n    }\n    fetchData();\n  }, [pages, allInfo, search]);\n\n  const cleanMovieSearch = () => {\n    if (movieName === '' && movie.length >= 0) {\n      window.localStorage.setItem(\n        'movieSearch',\n        JSON.stringify([\n          {\n            id: 0,\n            poster_path: null,\n            title: '',\n            original_title: '',\n            release_date: '',\n            vote_average: 0,\n            vote_count: 0,\n          },\n        ])\n      );\n    }\n  };\n  cleanMovieSearch();\n\n  const reachTheEnd = () => {\n    // const docHeight = document.documentElement.scrollHeight;\n    // const currentPos = window.innerHeight + window.pageYOffset;\n\n    // if (currentPos >= docHeight) {\n    if (allInfo.total_results === movie.length) {\n      // alert('The end!');\n      setHasMore(false);\n    }\n    // }\n  };\n  reachTheEnd();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setSearch(movieName);\n\n    async function fetchData() {\n      try {\n        const objectOfMovie = await getSearchByKeyWord(movieName, pages).then(\n          r => r.results\n        );\n        setMovie(objectOfMovie);\n        setPages(i => i + 1);\n      } catch (error) {\n        setError(error);\n      }\n    }\n    fetchData();\n  };\n\n  const updateQueryString = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n  const firstRender = movie.length === 1 && search === '' && movieName === '';\n  const noResults = movie.length === 1 && search !== '';\n  const goodResponse = movie.length > 1 && movieName !== '';\n\n  const fetchMoreData = () => {\n    async function getTotalPages() {\n      try {\n        const tot = await getSearchByKeyWord(search, pages).then(r => r);\n        setAllInfo(tot);\n      } catch (error) {\n        setError(error);\n      }\n    }\n    getTotalPages();\n  };\n\n  return (\n    <>\n      <SearchBox\n        value={movieName}\n        onChange={updateQueryString}\n        onSubmit={handleSubmit}\n      />\n      {firstRender && <h3>Find movie that you want to watch above...</h3>}\n\n      {goodResponse && (\n        <InfiniteScroll\n          dataLength={movie.length}\n          next={fetchMoreData}\n          hasMore={hasMore}\n          loader={<h4 style={{ textAlign: 'center' }}>Loading... </h4>}\n          endMessage={\n            <p style={{ textAlign: 'center' }}>\n              <b>Yay! You have seen it all ;D</b>\n            </p>\n          }\n        >\n          <MovieList movies={movie} />\n        </InfiniteScroll>\n      )}\n\n      {noResults && <h3>Sorry, there are no movies with that name...</h3>}\n\n      {error !== null && (\n        <h3>Something went wrong on API... The messege error `{error}`</h3>\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["Wrapper","styled","Input","Icon","HiSearch","value","onChange","onSubmit","type","e","target","useState","search","setSearch","error","setError","useSearchParams","searchParams","setSearchParams","movieName","get","JSON","parse","window","localStorage","getItem","id","poster_path","title","original_title","release_date","vote_average","vote_count","movie","setMovie","pages","setPages","page","results","total_results","total_pages","allInfo","setAllInfo","hasMore","setHasMore","useEffect","setItem","stringify","getSearchByKeyWord","then","r","arrayOfMovies","i","fetchData","length","firstRender","noResults","goodResponse","query","event","objectOfMovie","preventDefault","dataLength","next","tot","getTotalPages","loader","style","textAlign","endMessage","MovieList","movies"],"sourceRoot":""}