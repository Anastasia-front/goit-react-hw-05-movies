{"version":3,"file":"static/js/491.4c43185d.chunk.js","mappings":"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","sources":["components/BackLink/BackLink.styled.js","components/BackLink/BackLink.jsx","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","serviceAPI/fetch.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  margin-bottom: 15px;\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orangered;\n  }\n`;\n","import { HiArrowLeft } from 'react-icons/hi';\nimport { StyledLink } from './BackLink.styled';\nimport PropTypes from 'prop-types';\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n\nBackLink.propTypes = {\n  to: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n    search: PropTypes.string.isRequired,\n  }),\n  children: PropTypes.node.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const FirstWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const MainInfo = styled.div`\n  display: flex;\n`;\n\nexport const Poster = styled.img`\n  max-width: 500px;\n  max-height: 400px;\n  border-radius: 7px;\n`;\n\nexport const MainText = styled.div`\n  margin-left: 30px;\n`;\n\nexport const AdditionsUl = styled.ul`\n  margin-bottom: 10px;\n`;\nexport const AdditionsLi = styled.li`\n  list-style: circle;\n  margin-bottom: 10px;\n  font-size: 18px;\n  a {\n    text-decoration: underline dotted;\n    color: #7c5400;\n  }\n`;\nexport const Genres = styled.ul`\n  display: flex;\n  gap: 6px;\n  padding: 0;\n`;\nexport const Genre = styled.li`\n  list-style: none;\n  padding: 0 6px 0 0;\n  :not(:last-child) {\n    border-right: 1px solid grey;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { BackLink } from 'components/BackLink/BackLink';\nimport { getMovieById } from 'serviceAPI/fetch';\nimport { Container } from 'components/SharedLayout/SharedLayout.styled';\nimport {\n  FirstWrapper,\n  MainInfo,\n  Poster,\n  MainText,\n  AdditionsLi,\n  AdditionsUl,\n  Genres,\n  Genre,\n} from './MovieDetails.styled';\nimport { Suspense } from 'react';\nimport { Link, Outlet } from 'react-router-dom';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(() => {\n    return (\n      JSON.parse(window.localStorage.getItem('movie')) ?? {\n        backdrop_path: null,\n        id: 0,\n        poster_path: null,\n        title: '',\n        original_title: '',\n        release_date: '',\n        vote_average: 0,\n        vote_count: 0,\n        overview: '',\n        genres: [{ id: 0, name: '' }],\n      }\n    );\n  });\n  const [error, setError] = useState(null);\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    window.localStorage.setItem('movie', JSON.stringify(movie));\n  }, [movie]);\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const objectOfMovie = await getMovieById(id).then(r => r);\n\n        setMovie(objectOfMovie);\n      } catch (error) {\n        setError(error);\n      }\n    }\n    fetchData();\n  }, [id]);\n  const location = useLocation();\n  // console.log(location);\n\n  const backLink = () => {\n    if (location.state === null) {\n      return { pathname: '/', search: '' };\n    }\n    if (location.state.from.state === null) {\n      const locationSearch =\n        location.state.from.state === null\n          ? location.state.from.search\n          : location.state.from.state.from.search;\n\n      const backLinkHrefSearch =\n        location.pathname === '/movies' ||\n        `/movies/${id}` ||\n        `/movies/${id}/cast` ||\n        `/movies/${id}/reviews`\n          ? {\n              locationSearch,\n            } ?? '/movies'\n          : location.state?.from ?? '/';\n\n      const pathname =\n        location.state.from.state === null\n          ? location.state.from.pathname\n          : location.state.from.state.from.pathname;\n\n      const backLinkHrefPathname = pathname === '/' ? '/' : '/movies';\n      return {\n        pathname: backLinkHrefPathname,\n        search: backLinkHrefSearch.locationSearch,\n      };\n    }\n    if (location.state.from.state.from.state === null) {\n      const locationSearch =\n        location.state.from.state.from.state === null\n          ? location.state.from.state.from.search\n          : location.state.from.state.from.state.from.search;\n\n      const backLinkHrefSearch =\n        location.pathname === '/movies' ||\n        `/movies/${id}` ||\n        `/movies/${id}/cast` ||\n        `/movies/${id}/reviews`\n          ? {\n              locationSearch,\n            } ?? '/movies'\n          : location.state?.from ?? '/';\n\n      const pathname =\n        location.state.from.state.from.state === null\n          ? location.state.from.state.from.pathname\n          : location.state.from.state.from.state.from.pathname;\n\n      const backLinkHrefPathname = pathname === '/' ? '/' : '/movies';\n\n      return {\n        pathname: backLinkHrefPathname,\n        search: backLinkHrefSearch.locationSearch,\n      };\n      // const paPathname =\n      //   (location.pathname === `/movies/${id}/cast` || `/movies/${id}/reviews`) &&\n      //   location.state.from.state.from.pathname === '/'\n      //     ? location.state.from.state.from.pathname\n      //     : '/movies';\n    }\n    if (location.state.from.state.from.state.from.state === null) {\n      const locationSearch =\n        location.state.from.state.from.state.from.state === null\n          ? location.state.from.state.from.state.from.search\n          : location.state.from.state.from.state.from.state.from.search;\n\n      const backLinkHrefSearch =\n        location.pathname === '/movies' ||\n        `/movies/${id}` ||\n        `/movies/${id}/cast` ||\n        `/movies/${id}/reviews`\n          ? {\n              locationSearch,\n            } ?? '/movies'\n          : location.state?.from ?? '/';\n\n      const pathname =\n        location.state.from.state.from.state.from.state === null\n          ? location.state.from.state.from.state.from.pathname\n          : location.state.from.state.from.state.from.state.from.pathname;\n\n      const backLinkHrefPathname = pathname === '/' ? '/' : '/movies';\n\n      return {\n        pathname: backLinkHrefPathname,\n        search: backLinkHrefSearch.locationSearch,\n      };\n    }\n  };\n\n  return (\n    <>\n      {error === null ? (\n        <Container>\n          <BackLink to={backLink()}>Back to movies</BackLink>\n          <FirstWrapper>\n            <MainInfo>\n              {movie.backdrop_path !== null ? (\n                <Poster\n                  src={`https://image.tmdb.org/t/p/w500${movie.backdrop_path}`}\n                  alt={movie.title}\n                />\n              ) : (\n                <Poster\n                  src={\n                    'https://fisnikde.com/wp-content/uploads/2019/01/broken-image.png'\n                  }\n                  alt={movie.title}\n                />\n              )}\n              <MainText>\n                <h1>\n                  {movie.original_title} ({movie.release_date.slice(0, 4)})\n                </h1>\n                <p>User Score: {Math.round(movie.vote_average * 10)}%</p>\n                <h2>Overview</h2>\n                <p>{movie.overview}</p>\n                <h3>Genres</h3>\n                <Genres>\n                  {movie.genres.map(genre => (\n                    <Genre key={genre.id}> {genre.name}</Genre>\n                  ))}\n                </Genres>\n              </MainText>\n            </MainInfo>\n            <div>\n              <h3>Additional information</h3>\n              <AdditionsUl>\n                <AdditionsLi>\n                  <Link to=\"cast\" state={{ from: location }}>\n                    Cast\n                  </Link>\n                </AdditionsLi>\n                <AdditionsLi>\n                  <Link to=\"reviews\" state={{ from: location }}>\n                    Reviews\n                  </Link>\n                </AdditionsLi>\n              </AdditionsUl>\n            </div>\n            <Suspense fallback={<div>Loading subpage...</div>}>\n              <Outlet />\n            </Suspense>\n          </FirstWrapper>\n        </Container>\n      ) : (\n        <h3>Something went wrong on API... The messege error `{error}`</h3>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n","const BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '78844696e6f21da4f5b43c08b71ce0bd';\n\nexport async function getTrending(page) {\n  const response = await fetch(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}&page=${page}`\n  );\n\n  return response.json();\n}\nexport const getMovieById = async movieId => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n\n  return response.json();\n};\n\nexport const getMovieCastById = async movieId => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n\n  return response.json();\n};\n\nexport const getMovieReviewsById = async movieId => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n\n  return response.json();\n};\n\nexport async function getSearchByKeyWord(query, page) {\n  const response = await fetch(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&page=${page}`\n  );\n\n  return response.json();\n}\n"],"names":["StyledLink","styled","Link","BackLink","to","children","size","FirstWrapper","MainInfo","Poster","MainText","AdditionsUl","AdditionsLi","Genres","Genre","useState","JSON","parse","window","localStorage","getItem","backdrop_path","id","poster_path","title","original_title","release_date","vote_average","vote_count","overview","genres","name","movie","setMovie","error","setError","useParams","useEffect","setItem","stringify","getMovieById","then","r","objectOfMovie","fetchData","location","useLocation","state","pathname","search","from","locationSearch","backLinkHrefSearch","backLink","src","alt","slice","Math","round","map","genre","Suspense","fallback","BASE_URL","API_KEY","getTrending","page","fetch","response","json","movieId","getMovieCastById","getMovieReviewsById","getSearchByKeyWord","query"],"sourceRoot":""}