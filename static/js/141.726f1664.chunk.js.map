{"version":3,"file":"static/js/141.726f1664.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","components/SearchBox/SearchBox.styled.js","components/SearchBox/SearchBox.jsx","pages/Movies/Movies.jsx","serviceAPI/fetch.js"],"sourcesContent":["import styled from 'styled-components';\n\n// export const AlignCenter = styled.div`\n//   margin: 0 auto;\n// `;\n\nexport const ListUl = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n`;\n\nexport const ListLi = styled.li`\n  position: relative;\n  list-style: none;\n  width: 270px;\n  height: 550px;\n  border: 1px solid grey;\n  border-radius: 4px;\n  margin-bottom: 0px;\n\n  a {\n    text-decoration: none;\n  }\n`;\n\nexport const MovieName = styled.h3`\n  text-align: center;\n  padding: 4px;\n  margin-top: 12px;\n  margin-bottom: 6px;\n  color: black;\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  height: 403px;\n  display: block;\n  border-bottom: 1px solid darkred;\n`;\nexport const Description = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  font-weight: 500;\n  color: brown;\n  display: flex;\n  gap: 6px;\n  padding: 15px 6px 15px 6px;\n  justify-content: space-between;\n  border-top: 1px dotted;\n`;\n\nexport const Block = styled.div`\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  padding: 0 6px 0 0;\n  :not(:last-child) {\n    border-right: 1px solid grey;\n  }\n\n  p {\n    margin: 0 0 7px 0;\n  }\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  MovieName,\n  Image,\n  Description,\n  ListUl,\n  ListLi,\n  Block,\n} from './MovieList.styled';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n  console.log(movies);\n  return (\n    <ListUl>\n      {movies.map(movie => (\n        <ListLi key={movie.id}>\n          {location.pathname === '/movies' ? (\n            <Link to={`${movie.id}`} state={{ from: location }}>\n              {movie.poster_path !== null ? (\n                <Image\n                  src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n                  alt={movie.title}\n                  width=\"100px\"\n                />\n              ) : (\n                <Image\n                  src={\n                    'https://resources.arcamax.com/newspics/240/24034/2403468.png'\n                  }\n                  alt={movie.title}\n                  width=\"100px\"\n                />\n              )}\n\n              {movie.original_title.length > 45 ? (\n                <MovieName>\n                  {movie.original_title.slice(0, 45) + '...'}\n                </MovieName>\n              ) : (\n                <MovieName>{movie.original_title}</MovieName>\n              )}\n\n              <Description>\n                <Block>\n                  <p>Release date:</p>\n                  <p>{movie.release_date.split('-').reverse().join('/')}</p>\n                </Block>\n                <Block>\n                  <p> Rate:</p>\n                  <p>{Math.round(movie.vote_average * 10) / 10}</p>\n                </Block>\n                <Block>\n                  <p> Vote count:</p>\n                  <p>{movie.vote_count}</p>\n                </Block>\n              </Description>\n            </Link>\n          ) : (\n            <Link to={`movies/${movie.id}`} state={{ from: location }}>\n              {movie.poster_path !== null ? (\n                <Image\n                  src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n                  alt={movie.title}\n                  width=\"100px\"\n                />\n              ) : (\n                <Image\n                  src={\n                    'https://resources.arcamax.com/newspics/240/24034/2403468.png'\n                  }\n                  alt={movie.title}\n                  width=\"100px\"\n                />\n              )}\n\n              {movie.original_title.length > 45 ? (\n                <MovieName>\n                  {movie.original_title.slice(0, 45) + '...'}\n                </MovieName>\n              ) : (\n                <MovieName>{movie.original_title}</MovieName>\n              )}\n\n              <Description>\n                <Block>\n                  <p>Release date:</p>\n                  <p>{movie.release_date.split('-').reverse().join('/')}</p>\n                </Block>\n                <Block>\n                  <p> Rate:</p>\n                  <p>{Math.round(movie.vote_average * 10) / 10}</p>\n                </Block>\n                <Block>\n                  <p> Vote count:</p>\n                  <p>{movie.vote_count}</p>\n                </Block>\n              </Description>\n            </Link>\n          )}\n        </ListLi>\n      ))}\n    </ListUl>\n  );\n};\n\nexport default MovieList;\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      poster_path: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.oneOf([null]),\n      ]),\n      title: PropTypes.string.isRequired,\n      original_title: PropTypes.string.isRequired,\n      release_date: PropTypes.string.isRequired,\n      vote_average: PropTypes.number.isRequired,\n      vote_count: PropTypes.number.isRequired,\n    })\n  ),\n};\n","import styled from 'styled-components';\nimport { HiSearch } from 'react-icons/hi';\n\nexport const Wrapper = styled.div`\n  display: inline-flex;\n  align-items: center;\n  margin-bottom: 16px;\n  text-transform: uppercase;\n  position: relative;\n`;\n\nexport const Input = styled.input`\n  padding: 8px 32px 8px 8px;\n  border-radius: 4px;\n  border: 1px solid #7c5400;\n  font: inherit;\n`;\n\nexport const Icon = styled(HiSearch)`\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  top: 9px;\n  right: 6px;\n`;\n","import { Wrapper, Input, Icon } from './SearchBox.styled';\nimport PropTypes from 'prop-types';\n\nconst SearchBox = ({ value, onChange, onSubmit }) => {\n  return (\n    <Wrapper>\n      <form onSubmit={onSubmit}>\n        <Input\n          type=\"text\"\n          value={value}\n          onChange={e => onChange(e.target.value)}\n        />\n        <Icon />\n      </form>\n    </Wrapper>\n  );\n};\nexport default SearchBox;\n\nSearchBox.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport SearchBox from 'components/SearchBox/SearchBox';\nimport { getSearchByKeyWord } from 'serviceAPI/fetch';\nimport MovieList from 'components/MovieList/MovieList';\n\nconst Movies = () => {\n  const [search, setSearch] = useState('');\n  const [error, setError] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('query') ?? '';\n  const [movie, setMovie] = useState(() => {\n    return (\n      JSON.parse(window.localStorage.getItem('movieSearch')) ?? {\n        page: 0,\n        results: [],\n        total_results: 0,\n        total_pages: 0,\n      }\n    );\n  });\n  // const [movie, setMovie] = useState([]);\n\n  useEffect(() => {\n    window.localStorage.setItem('movieSearch', JSON.stringify(movie));\n  }, [movie]);\n\n  // useEffect(() => {\n  //   window.localStorage.setItem(\n  //     'movieSearch',\n  //     JSON.stringify({ page: 0, results: [], total_results: 0, total_pages: 0 })\n  //   );\n  // }, []);\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const objectOfMovie = await getSearchByKeyWord(search).then(r => r);\n\n        setMovie(objectOfMovie);\n      } catch (error) {\n        setError(error);\n      }\n    }\n    fetchData();\n  }, [search]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setSearch(movieName);\n\n    async function fetchData() {\n      try {\n        const objectOfMovie = await getSearchByKeyWord(movieName).then(r => r);\n        setMovie(objectOfMovie);\n      } catch (error) {\n        setError(error);\n      }\n    }\n    fetchData();\n  };\n\n  const updateQueryString = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n  const firstRender = movie.results.length === 0 && movieName === '';\n  const noResults = movie.results.length === 0 && movieName !== '';\n\n  return (\n    <>\n      <SearchBox\n        value={movieName}\n        onChange={updateQueryString}\n        onSubmit={handleSubmit}\n      />\n      {firstRender && <h3>Find movie that you want to watch above...</h3>}\n      {error === null ? (\n        <p></p>\n      ) : (\n        <h3>Something went wrong on API... The messege error `{error}`</h3>\n      )}\n      {noResults ? (\n        <h3>Sorry, there are no movies with that name...</h3>\n      ) : (\n        <MovieList movies={movie.results} />\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n","const BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '78844696e6f21da4f5b43c08b71ce0bd';\n\nexport async function getTrending() {\n  const response = await fetch(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n\n  return response.json();\n}\nexport const getMovieById = async movieId => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n\n  return response.json();\n};\n\nexport const getMovieCastById = async movieId => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n\n  return response.json();\n};\n\nexport const getMovieReviewsById = async movieId => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n\n  return response.json();\n};\n\nexport async function getSearchByKeyWord(query) {\n  const response = await fetch(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}`\n  );\n\n  return response.json();\n}\n"],"names":["ListUl","styled","ListLi","MovieName","Image","Description","Block","movies","location","useLocation","console","log","map","movie","pathname","to","id","state","from","poster_path","src","alt","title","width","original_title","length","slice","release_date","split","reverse","join","Math","round","vote_average","vote_count","Wrapper","Input","Icon","HiSearch","value","onChange","onSubmit","type","e","target","useState","search","setSearch","error","setError","useSearchParams","searchParams","setSearchParams","movieName","get","JSON","parse","window","localStorage","getItem","page","results","total_results","total_pages","setMovie","useEffect","setItem","stringify","getSearchByKeyWord","then","r","objectOfMovie","fetchData","firstRender","noResults","query","event","preventDefault","MovieList","BASE_URL","API_KEY","getTrending","fetch","response","json","getMovieById","movieId","getMovieCastById","getMovieReviewsById"],"sourceRoot":""}