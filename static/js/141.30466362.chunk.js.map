{"version":3,"file":"static/js/141.30466362.chunk.js","mappings":"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","sources":["components/SearchBox/SearchBox.styled.js","components/SearchBox/SearchBox.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { HiSearch } from 'react-icons/hi';\n\nexport const Wrapper = styled.div`\n  display: inline-flex;\n  align-items: center;\n  margin-bottom: 10px;\n  margin-top: -20px;\n  text-transform: uppercase;\n  position: relative;\n`;\n\nexport const Input = styled.input`\n  padding: 4px 32px 4px 24px;\n  border-radius: 4px;\n  border: 1px solid #7c5400;\n  font: inherit;\n`;\n\nexport const Icon = styled(HiSearch)`\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  top: 6px;\n  right: 6px;\n`;\n","import { Wrapper, Input, Icon } from './SearchBox.styled';\nimport PropTypes from 'prop-types';\n\nconst SearchBox = ({ value, onChange, onSubmit }) => {\n  return (\n    <Wrapper>\n      <form onSubmit={onSubmit}>\n        <Input\n          type=\"text\"\n          value={value}\n          onChange={e => onChange(e.target.value)}\n        />\n        <Icon />\n      </form>\n    </Wrapper>\n  );\n};\nexport default SearchBox;\n\nSearchBox.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport SearchBox from 'components/SearchBox/SearchBox';\nimport { GoUp, Message } from './Movies.styled';\nimport { HiArrowUp } from 'react-icons/hi';\nimport { getSearchByKeyWord } from 'serviceAPI/fetch';\nimport MovieList from 'components/MovieList/MovieList';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { scrollPos, scrollTop, infiniteHeight, boxScroll } from 'utils/scroll';\n\nconst Movies = () => {\n  const [error, setError] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('query') ?? '';\n  const [search, setSearch] = useState(searchParams.get('query') ?? '');\n  const [hasMore, setHasMore] = useState(true);\n  const [movie, setMovie] = useState([]);\n  const [pages, setPages] = useState(1);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    localStorage.setItem('scrollPos', 0);\n  }, []);\n\n  useEffect(() => {\n    if (search === '') {\n      return;\n    }\n    if (pages === 1) {\n      async function fetchData() {\n        try {\n          getSearchByKeyWord(search, pages).then(info => {\n            setMovie(info.results);\n          });\n        } catch (error) {\n          setError(error);\n        }\n      }\n      fetchData();\n    }\n    if (pages > 1) {\n      async function fetchData() {\n        try {\n          getSearchByKeyWord(search, pages).then(info => {\n            setMovie(i => [...i, ...info.results]);\n          });\n        } catch (error) {\n          setError(error);\n        }\n      }\n      fetchData();\n    }\n    setLoading(false);\n  }, [pages, search]);\n\n  useEffect(() => {\n    if (movieName !== search) {\n      setMovie([]);\n    }\n  }, [movieName, search]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setSearch(movieName);\n    setPages(1);\n    setLoading(true);\n  };\n\n  const updateQueryString = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n\n  const fetchMoreData = () => {\n    setPages(i => i + 1);\n  };\n\n  const reachTheEnd = () => {\n    if (movie.length !== 0) {\n      getSearchByKeyWord(search, pages).then(info => {\n        if (movie.length === info.total_results) {\n          setHasMore(false);\n        }\n      });\n    }\n  };\n  reachTheEnd();\n\n  const firstRender = movie.length === 0 && search === '' && movieName === '';\n  const noResults =\n    movie.length === 0 &&\n    pages === 1 &&\n    search === movieName &&\n    loading === false;\n  const goodResponse = movie.length >= 1 && movieName !== '';\n\n  return (\n    <>\n      <SearchBox\n        value={movieName}\n        onChange={updateQueryString}\n        onSubmit={handleSubmit}\n      />\n      {firstRender && (\n        <Message>Find movie that you want to watch above...</Message>\n      )}\n\n      {loading && <p>Loading...</p>}\n\n      {goodResponse && (\n        <InfiniteScroll\n          dataLength={movie.length}\n          next={fetchMoreData}\n          style={{ overflow: 'auto' }}\n          initialScrollY={JSON.parse(window.localStorage.getItem('scrollPos'))}\n          height={infiniteHeight()}\n          hasMore={hasMore}\n          loader={<h4 style={{ textAlign: 'center' }}>Loading... </h4>}\n          endMessage={\n            <p style={{ textAlign: 'center' }}>\n              <b>Yay! You have seen it all ;D</b>\n            </p>\n          }\n        >\n          <MovieList movies={movie} onClick={() => scrollPos(boxScroll())} />\n          {boxScroll() > 1000 && (\n            <GoUp onClick={() => scrollTop()}>\n              UP <HiArrowUp size={24} />\n            </GoUp>\n          )}\n        </InfiniteScroll>\n      )}\n\n      {noResults && (\n        <Message>Sorry, there are no movies with that name...</Message>\n      )}\n\n      {error !== null && (\n        <Message>\n          Something went wrong on API... The messege error `{error}`\n        </Message>\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["Wrapper","styled","Input","Icon","HiSearch","value","onChange","onSubmit","type","e","target","useState","error","setError","useSearchParams","searchParams","setSearchParams","movieName","get","search","setSearch","hasMore","setHasMore","movie","setMovie","pages","setPages","loading","setLoading","useEffect","localStorage","setItem","fetchData","getSearchByKeyWord","then","info","results","i","length","total_results","firstRender","noResults","goodResponse","query","event","preventDefault","dataLength","next","style","overflow","initialScrollY","JSON","parse","window","getItem","height","infiniteHeight","loader","textAlign","endMessage","MovieList","movies","onClick","scrollPos","boxScroll","scrollTop","size"],"sourceRoot":""}